# Generated by Django 5.0.3 on 2024-04-17 00:05

import django.core.validators
import django.db.models.deletion
import myapp.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('myapp', '0007_rename_user_imag_container_userprofile_user_image_container_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='post',
            name='tag_another_user',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='email',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='user_address',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='user_city',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='user_lastname',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='username',
        ),
        migrations.AddField(
            model_name='comment',
            name='tagged_users',
            field=models.ManyToManyField(blank=True, help_text='Select the users who are tagged in the comment.', related_name='tagged_comments', to='myapp.userprofile'),
        ),
        migrations.AddField(
            model_name='post',
            name='tagged_users',
            field=models.ManyToManyField(blank=True, help_text='Select the users who are tagged in the post.', related_name='tagged_posts', to='myapp.userprofile'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_bio',
            field=models.TextField(default='No bio', help_text='The bio must be between 1 and 500 characters long.', validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(500)]),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_nickname',
            field=models.CharField(default=1, error_messages={'unique': 'A user with this nickname already exists.'}, help_text='The nickname must be between 1 and 25 characters long.', max_length=25, unique=True, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(25)]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_website',
            field=models.URLField(blank=True, default='No website added', help_text='Enter your website URL.', null=True),
        ),
        migrations.AlterField(
            model_name='activitylog',
            name='action',
            field=models.CharField(choices=[('post', 'Post'), ('comment', 'Comment'), ('like', 'Like'), ('follow', 'Follow')], help_text='Select the type of the activity.', max_length=50),
        ),
        migrations.AlterField(
            model_name='activitylog',
            name='activity_id',
            field=models.AutoField(help_text='The ID of the activity.', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='activitylog',
            name='time',
            field=models.DateTimeField(help_text='Enter the time when the activity was performed.'),
        ),
        migrations.AlterField(
            model_name='activitylog',
            name='user',
            field=models.ForeignKey(help_text='Select the user who performed the activity.', on_delete=django.db.models.deletion.CASCADE, to='myapp.userprofile'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='comments_id',
            field=models.AutoField(help_text='The ID of the comment.', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='comment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The date when the comment was created.'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='parent_comment',
            field=models.ForeignKey(blank=True, help_text='Select the parent comment if this is a reply.', null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.comment'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(help_text='Select the post that the comment is for.', null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.post'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='replies',
            field=models.ManyToManyField(blank=True, help_text='Select the replies to this comment.', to='myapp.comment'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(help_text='Select the user who made the comment.', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='myapp.userprofile'),
        ),
        migrations.AlterField(
            model_name='follow',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The date when the follow was created.'),
        ),
        migrations.AlterField(
            model_name='follow',
            name='followee',
            field=models.ForeignKey(help_text='Select the user who is being followed.', on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='myapp.userprofile'),
        ),
        migrations.AlterField(
            model_name='follow',
            name='follower_user',
            field=models.ForeignKey(help_text='Select the user who is following.', on_delete=django.db.models.deletion.CASCADE, related_name='following', to='myapp.userprofile'),
        ),
        migrations.AlterField(
            model_name='follow',
            name='follows_id',
            field=models.AutoField(help_text='The ID of the follow.', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='like',
            name='content_type',
            field=models.ForeignKey(help_text='Select the content type of the liked object.', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AlterField(
            model_name='like',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The date when the like was created.'),
        ),
        migrations.AlterField(
            model_name='like',
            name='likes_id',
            field=models.AutoField(help_text='The ID of the like.', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='like',
            name='object_id',
            field=models.PositiveIntegerField(help_text='Enter the ID of the liked object.'),
        ),
        migrations.AlterField(
            model_name='like',
            name='user',
            field=models.ForeignKey(help_text='Select the user who made the like.', on_delete=django.db.models.deletion.CASCADE, to='myapp.userprofile'),
        ),
        migrations.AlterField(
            model_name='message',
            name='content',
            field=models.TextField(default='No content', help_text='Enter the content of the message.'),
        ),
        migrations.AlterField(
            model_name='message',
            name='is_read',
            field=models.BooleanField(default=False, help_text='Check this if the message has been read.'),
        ),
        migrations.AlterField(
            model_name='message',
            name='message_id',
            field=models.AutoField(help_text='The ID of the message.', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='message',
            name='recipient',
            field=models.ForeignKey(help_text='Select the user who will receive the message.', on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='myapp.userprofile'),
        ),
        migrations.AlterField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(help_text='Select the user who sent the message.', on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='myapp.userprofile'),
        ),
        migrations.AlterField(
            model_name='message',
            name='sent_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The date when the message was sent.'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='content',
            field=models.TextField(default='No content', help_text='Enter the content of the notification.'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The date when the notification was created.'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='is_read',
            field=models.BooleanField(default=False, help_text='Check this if the notification has been read.'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notification_id',
            field=models.AutoField(help_text='The ID of the notification.', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='notification',
            name='type',
            field=models.CharField(choices=[('like', 'Like'), ('comment', 'Comment'), ('follow', 'Follow'), ('tag', 'Tag'), ('message', 'Message')], help_text='Select the type of the notification.', max_length=20),
        ),
        migrations.AlterField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(help_text='Select the user who will receive the notification.', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='myapp.userprofile'),
        ),
        migrations.AlterField(
            model_name='post',
            name='comments',
            field=models.ManyToManyField(blank=True, help_text='Select the comments on the post.', related_name='post_comments', to='myapp.comment'),
        ),
        migrations.AlterField(
            model_name='post',
            name='content',
            field=models.TextField(default='No content', help_text='The post must be between 1 and 750 characters long.', validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(750)]),
        ),
        migrations.AlterField(
            model_name='post',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The date when the post was created.'),
        ),
        migrations.AlterField(
            model_name='post',
            name='image',
            field=models.ImageField(blank=True, help_text='Upload an image for the post.', null=True, upload_to='posts/', validators=[myapp.models.validate_image_file_size]),
        ),
        migrations.AlterField(
            model_name='post',
            name='is_private',
            field=models.BooleanField(default=False, help_text='Check this if you want the post to be private.'),
        ),
        migrations.AlterField(
            model_name='post',
            name='likes',
            field=models.ManyToManyField(blank=True, help_text='Select the users who liked the post.', related_name='liked_posts', to='myapp.userprofile'),
        ),
        migrations.AlterField(
            model_name='post',
            name='post_id',
            field=models.AutoField(help_text='The ID of the post.', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='post',
            name='user',
            field=models.ForeignKey(help_text='Select the user who made the post.', on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='myapp.userprofile'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='last_login',
            field=models.DateTimeField(auto_now=True, help_text='The last login date.'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(help_text='Select the user.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user_country',
            field=models.CharField(choices=[('USA', 'USA'), ('UK', 'UK'), ('CAN', 'CAN'), ('AUS', 'AUS'), ('IND', 'IND'), ('GER', 'GER'), ('FRA', 'FRA'), ('ITA', 'ITA'), ('SPA', 'SPA'), ('BRA', 'BRA'), ('JPN', 'JPN'), ('CHN', 'CHN'), ('RUS', 'RUS'), ('MEX', 'MEX'), ('ARG', 'ARG'), ('COL', 'COL'), ('PER', 'PER'), ('CHI', 'CHI'), ('IL', 'IL'), ('EGY', 'EGY')], default='USA', help_text='Select your country.', max_length=3),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user_gender',
            field=models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='O', help_text='Select your gender.', max_length=1),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user_image_container',
            field=models.ImageField(blank=True, help_text='Upload your image.', null=True, upload_to='', validators=[myapp.models.validate_image_file_size]),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user_phone',
            field=models.CharField(error_messages={'unique': 'A user with this phone number already exists.'}, help_text='Enter your phone number.', max_length=25, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user_profile_image',
            field=models.ImageField(blank=True, default=myapp.models.default_image, help_text='Upload your profile image.', null=True, upload_to=''),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user_register_date',
            field=models.DateTimeField(auto_now_add=True, help_text='The date when the user registered.'),
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('user', 'content_type', 'object_id')},
        ),
    ]
